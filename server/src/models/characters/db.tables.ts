// tslint:disable
import * as path from 'path';
import * as sequelize from 'sequelize';
import * as def from './db';

export interface ITables {
  account_data: def.account_dataModel;
  account_instance_times: def.account_instance_timesModel;
  account_tutorial: def.account_tutorialModel;
  addons: def.addonsModel;
  arena_team: def.arena_teamModel;
  arena_team_member: def.arena_team_memberModel;
  auctionhouse: def.auctionhouseModel;
  banned_addons: def.banned_addonsModel;
  battleground_deserters: def.battleground_desertersModel;
  bugreport: def.bugreportModel;
  calendar_events: def.calendar_eventsModel;
  calendar_invites: def.calendar_invitesModel;
  channels: def.channelsModel;
  channels_bans: def.channels_bansModel;
  channels_rights: def.channels_rightsModel;
  character_account_data: def.character_account_dataModel;
  character_achievement: def.character_achievementModel;
  character_achievement_progress: def.character_achievement_progressModel;
  character_action: def.character_actionModel;
  character_arena_stats: def.character_arena_statsModel;
  character_aura: def.character_auraModel;
  character_banned: def.character_bannedModel;
  character_battleground_random: def.character_battleground_randomModel;
  character_brew_of_the_month: def.character_brew_of_the_monthModel;
  character_declinedname: def.character_declinednameModel;
  character_entry_point: def.character_entry_pointModel;
  character_equipmentsets: def.character_equipmentsetsModel;
  character_gifts: def.character_giftsModel;
  character_glyphs: def.character_glyphsModel;
  character_homebind: def.character_homebindModel;
  character_instance: def.character_instanceModel;
  character_inventory: def.character_inventoryModel;
  character_pet: def.character_petModel;
  character_pet_declinedname: def.character_pet_declinednameModel;
  character_queststatus: def.character_queststatusModel;
  character_queststatus_daily: def.character_queststatus_dailyModel;
  character_queststatus_monthly: def.character_queststatus_monthlyModel;
  character_queststatus_rewarded: def.character_queststatus_rewardedModel;
  character_queststatus_seasonal: def.character_queststatus_seasonalModel;
  character_queststatus_weekly: def.character_queststatus_weeklyModel;
  character_reputation: def.character_reputationModel;
  character_skills: def.character_skillsModel;
  character_social: def.character_socialModel;
  character_spell: def.character_spellModel;
  character_spell_cooldown: def.character_spell_cooldownModel;
  character_stats: def.character_statsModel;
  character_talent: def.character_talentModel;
  characters: def.charactersModel;
  corpse: def.corpseModel;
  creature_respawn: def.creature_respawnModel;
  game_event_condition_save: def.game_event_condition_saveModel;
  game_event_save: def.game_event_saveModel;
  gameobject_respawn: def.gameobject_respawnModel;
  gm_subsurvey: def.gm_subsurveyModel;
  gm_survey: def.gm_surveyModel;
  gm_ticket: def.gm_ticketModel;
  group_member: def.group_memberModel;
  groups: def.groupsModel;
  guild: def.guildModel;
  guild_bank_eventlog: def.guild_bank_eventlogModel;
  guild_bank_item: def.guild_bank_itemModel;
  guild_bank_right: def.guild_bank_rightModel;
  guild_bank_tab: def.guild_bank_tabModel;
  guild_eventlog: def.guild_eventlogModel;
  guild_member: def.guild_memberModel;
  guild_member_withdraw: def.guild_member_withdrawModel;
  guild_rank: def.guild_rankModel;
  instance: def.instanceModel;
  instance_reset: def.instance_resetModel;
  item_instance: def.item_instanceModel;
  item_loot_storage: def.item_loot_storageModel;
  item_refund_instance: def.item_refund_instanceModel;
  item_soulbound_trade_data: def.item_soulbound_trade_dataModel;
  lag_reports: def.lag_reportsModel;
  lfg_data: def.lfg_dataModel;
  log_arena_fights: def.log_arena_fightsModel;
  log_arena_memberstats: def.log_arena_memberstatsModel;
  log_encounter: def.log_encounterModel;
  log_money: def.log_moneyModel;
  mail: def.mailModel;
  mail_items: def.mail_itemsModel;
  pet_aura: def.pet_auraModel;
  pet_spell: def.pet_spellModel;
  pet_spell_cooldown: def.pet_spell_cooldownModel;
  petition: def.petitionModel;
  petition_sign: def.petition_signModel;
  pool_quest_save: def.pool_quest_saveModel;
  pvpstats_battlegrounds: def.pvpstats_battlegroundsModel;
  pvpstats_players: def.pvpstats_playersModel;
  quest_tracker: def.quest_trackerModel;
  recovery_item: def.recovery_itemModel;
  reserved_name: def.reserved_nameModel;
  version_db_characters: def.version_db_charactersModel;
  warden_action: def.warden_actionModel;
  worldstates: def.worldstatesModel;
}

export const getModels = function(seq: sequelize.Sequelize): ITables {

  function load(filePath: string) {
    return seq.import(path.join(__dirname, filePath));
  }

  return {
    account_data: load('account_data'),
    account_instance_times: load('account_instance_times'),
    account_tutorial: load('account_tutorial'),
    addons: load('addons'),
    arena_team: load('arena_team'),
    arena_team_member: load('arena_team_member'),
    auctionhouse: load('auctionhouse'),
    banned_addons: load('banned_addons'),
    battleground_deserters: load('battleground_deserters'),
    bugreport: load('bugreport'),
    calendar_events: load('calendar_events'),
    calendar_invites: load('calendar_invites'),
    channels: load('channels'),
    channels_bans: load('channels_bans'),
    channels_rights: load('channels_rights'),
    character_account_data: load('character_account_data'),
    character_achievement: load('character_achievement'),
    character_achievement_progress: load('character_achievement_progress'),
    character_action: load('character_action'),
    character_arena_stats: load('character_arena_stats'),
    character_aura: load('character_aura'),
    character_banned: load('character_banned'),
    character_battleground_random: load('character_battleground_random'),
    character_brew_of_the_month: load('character_brew_of_the_month'),
    character_declinedname: load('character_declinedname'),
    character_entry_point: load('character_entry_point'),
    character_equipmentsets: load('character_equipmentsets'),
    character_gifts: load('character_gifts'),
    character_glyphs: load('character_glyphs'),
    character_homebind: load('character_homebind'),
    character_instance: load('character_instance'),
    character_inventory: load('character_inventory'),
    character_pet: load('character_pet'),
    character_pet_declinedname: load('character_pet_declinedname'),
    character_queststatus: load('character_queststatus'),
    character_queststatus_daily: load('character_queststatus_daily'),
    character_queststatus_monthly: load('character_queststatus_monthly'),
    character_queststatus_rewarded: load('character_queststatus_rewarded'),
    character_queststatus_seasonal: load('character_queststatus_seasonal'),
    character_queststatus_weekly: load('character_queststatus_weekly'),
    character_reputation: load('character_reputation'),
    character_skills: load('character_skills'),
    character_social: load('character_social'),
    character_spell: load('character_spell'),
    character_spell_cooldown: load('character_spell_cooldown'),
    character_stats: load('character_stats'),
    character_talent: load('character_talent'),
    characters: load('characters'),
    corpse: load('corpse'),
    creature_respawn: load('creature_respawn'),
    game_event_condition_save: load('game_event_condition_save'),
    game_event_save: load('game_event_save'),
    gameobject_respawn: load('gameobject_respawn'),
    gm_subsurvey: load('gm_subsurvey'),
    gm_survey: load('gm_survey'),
    gm_ticket: load('gm_ticket'),
    group_member: load('group_member'),
    groups: load('groups'),
    guild: load('guild'),
    guild_bank_eventlog: load('guild_bank_eventlog'),
    guild_bank_item: load('guild_bank_item'),
    guild_bank_right: load('guild_bank_right'),
    guild_bank_tab: load('guild_bank_tab'),
    guild_eventlog: load('guild_eventlog'),
    guild_member: load('guild_member'),
    guild_member_withdraw: load('guild_member_withdraw'),
    guild_rank: load('guild_rank'),
    instance: load('instance'),
    instance_reset: load('instance_reset'),
    item_instance: load('item_instance'),
    item_loot_storage: load('item_loot_storage'),
    item_refund_instance: load('item_refund_instance'),
    item_soulbound_trade_data: load('item_soulbound_trade_data'),
    lag_reports: load('lag_reports'),
    lfg_data: load('lfg_data'),
    log_arena_fights: load('log_arena_fights'),
    log_arena_memberstats: load('log_arena_memberstats'),
    log_encounter: load('log_encounter'),
    log_money: load('log_money'),
    mail: load('mail'),
    mail_items: load('mail_items'),
    pet_aura: load('pet_aura'),
    pet_spell: load('pet_spell'),
    pet_spell_cooldown: load('pet_spell_cooldown'),
    petition: load('petition'),
    petition_sign: load('petition_sign'),
    pool_quest_save: load('pool_quest_save'),
    pvpstats_battlegrounds: load('pvpstats_battlegrounds'),
    pvpstats_players: load('pvpstats_players'),
    quest_tracker: load('quest_tracker'),
    recovery_item: load('recovery_item'),
    reserved_name: load('reserved_name'),
    version_db_characters: load('version_db_characters'),
    warden_action: load('warden_action'),
    worldstates: load('worldstates'),
  } as ITables;
};